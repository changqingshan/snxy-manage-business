<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.snxy.manage.business.dao.mapper.PayRefundMapper">
  <resultMap id="BaseResultMap" type="com.snxy.manage.business.domain.PayRefund">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="source_order_no" jdbcType="VARCHAR" property="sourceOrderNo" />
    <result column="out_trade_no" jdbcType="INTEGER" property="outTradeNo" />
    <result column="out_refund_no" jdbcType="INTEGER" property="outRefundNo" />
    <result column="refund_fee" jdbcType="INTEGER" property="refundFee" />
    <result column="refund_type" jdbcType="INTEGER" property="refundType" />
    <result column="refund_status" jdbcType="INTEGER" property="refundStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, source_order_no, out_trade_no, out_refund_no, refund_fee, refund_type, refund_status, 
    remark, gmt_create, gmt_modified, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pay_refund
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pay_refund
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.snxy.manage.business.domain.PayRefund">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_refund (source_order_no, out_trade_no, out_refund_no, 
      refund_fee, refund_type, refund_status, 
      remark, gmt_create, gmt_modified, 
      is_delete)
    values (#{sourceOrderNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=INTEGER}, #{outRefundNo,jdbcType=INTEGER}, 
      #{refundFee,jdbcType=INTEGER}, #{refundType,jdbcType=INTEGER}, #{refundStatus,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.snxy.manage.business.domain.PayRefund">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pay_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sourceOrderNo != null">
        source_order_no,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="outRefundNo != null">
        out_refund_no,
      </if>
      <if test="refundFee != null">
        refund_fee,
      </if>
      <if test="refundType != null">
        refund_type,
      </if>
      <if test="refundStatus != null">
        refund_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sourceOrderNo != null">
        #{sourceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=INTEGER},
      </if>
      <if test="outRefundNo != null">
        #{outRefundNo,jdbcType=INTEGER},
      </if>
      <if test="refundFee != null">
        #{refundFee,jdbcType=INTEGER},
      </if>
      <if test="refundType != null">
        #{refundType,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        #{refundStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.snxy.manage.business.domain.PayRefund">
    update pay_refund
    <set>
      <if test="sourceOrderNo != null">
        source_order_no = #{sourceOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=INTEGER},
      </if>
      <if test="outRefundNo != null">
        out_refund_no = #{outRefundNo,jdbcType=INTEGER},
      </if>
      <if test="refundFee != null">
        refund_fee = #{refundFee,jdbcType=INTEGER},
      </if>
      <if test="refundType != null">
        refund_type = #{refundType,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null">
        refund_status = #{refundStatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.snxy.manage.business.domain.PayRefund">
    update pay_refund
    set source_order_no = #{sourceOrderNo,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=INTEGER},
      out_refund_no = #{outRefundNo,jdbcType=INTEGER},
      refund_fee = #{refundFee,jdbcType=INTEGER},
      refund_type = #{refundType,jdbcType=INTEGER},
      refund_status = #{refundStatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>